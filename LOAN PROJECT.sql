CREATE DATABASE LOAN;
USE LOAN;

CREATE TABLE BANK_LOAN_DATA(
id INT NOT NULL,
address_state VARCHAR(30) NOT NULL,
application_type VARCHAR(30) NOT NULL,
emp_length VARCHAR(30) NOT NULL,
emp_title VARCHAR(100) NOT NULL,
grade VARCHAR(30) NOT NULL,
home_ownership VARCHAR(50) NOT NULL,
issue_date VARCHAR(30) NOT NULL,
last_credit_pull_date VARCHAR(30) NOT NULL,
last_payment_date VARCHAR(30) NOT NULL,
loan_status VARCHAR(30) NOT NULL,
next_payment_date VARCHAR(30) NOT NULL,
member_id INT NOT NULL,
purpose VARCHAR(30) NOT NULL,
sub_grade VARCHAR(30) NOT NULL,
term VARCHAR(30) NOT NULL,
verification_status VARCHAR(30) NOT NULL,
annual_income INT NOT NULL,
dti DECIMAL(10,2) NOT NULL,
installment DECIMAL(10,2) NOT NULL,
int_rate DECIMAL(10,4) NOT NULL,
loan_amount INT NOT NULL,
total_acc INT NOT NULL,
total_payment INT NOT NULL
);

SELECT * FROM BANK_LOAN_DATA;

LOAD DATA INFILE
'C:/financial_loan.csv'
INTO TABLE BANK_LOAN_DATA
FIELDS terminated by ','
enclosed by '"'
LINES terminated by '\n'
ignore 1 ROWS

#1 Total application
SELECT COUNT(ID) AS TOTAL_APPLICATIONS FROM BANK_LOAN_DATA;

#2 MTD loan application
UPDATE BANK_LOAN_DATA
SET ISSUE_DATE = STR_TO_DATE(ISSUE_DATE,'%d-%m-%Y');
SELECT COUNT(ID) AS TOTAL_APPLICATIONS_MTD FROM BANK_LOAN_DATA
WHERE MONTH(ISSUE_DATE) = 12;

#3 PMTD loan application
SELECT COUNT(ID) AS TOTAL_APPLICATIONS_PMTD FROM BANK_LOAN_DATA
WHERE MONTH(ISSUE_DATE) = 11;

#4 Total funded amount
SELECT SUM(LOAN_AMOUNT) AS TOTAL_FUNDED_AMOUNT FROM BANK_LOAN_DATA;

#5 MTD TOTL FUNDED AMOUNT
SELECT SUM(LOAN_AMOUNT) AS TOTAL_FUNDED_AMOUNT_MTD FROM BANK_LOAN_DATA
WHERE MONTH(ISSUE_DATE) = 12;

#6 PMTD TOTL FUNDED AMOUNT
SELECT SUM(LOAN_AMOUNT) AS TOTAL_FUNDED_AMOUNT_PMTD FROM BANK_LOAN_DATA
WHERE MONTH(ISSUE_DATE) = 11;

#7 TOTAL AMOUNT RECIEVED
SELECT SUM(TOTAL_PAYMENT) AS TOTAL_AMOUNT_RECIEVED FROM BANK_LOAN_DATA;

#8 MTD TOTAL AMOUNT RECIEVED
SELECT SUM(TOTAL_PAYMENT) AS TOTAL_AMOUNT_RECIEVED_MTD FROM BANK_LOAN_DATA
WHERE MONTH(ISSUE_DATE) = 12;

#9 PMTD TOTAL AMOUNT RECIEVED
SELECT SUM(TOTAL_PAYMENT) AS TOTAL_AMOUNT_RECIEVED_PMTD FROM BANK_LOAN_DATA
WHERE MONTH(ISSUE_DATE) = 11;

#10 AVG. INTEREST RATE
SELECT AVG(INT_RATE) AS AVG_INT_RATE FROM BANK_LOAN_DATA;

#11 MTD AVG. INTEREST RATE
SELECT AVG(INT_RATE) AS AVG_INT_RATE_MTD FROM BANK_LOAN_DATA
WHERE MONTH(ISSUE_DATE) = 12;

#12 PMTD AVG. INTEREST RATE
SELECT AVG(INT_RATE) AS AVG_INT_RATE_PMTD FROM BANK_LOAN_DATA
WHERE MONTH(ISSUE_DATE) = 11;

#13 AVG. DTI
SELECT AVG(DTI) AS AVG_DTI FROM BANK_LOAN_DATA;

#14 MTD AVG. DTI
SELECT AVG(DTI) AS AVG_DTI_MTD FROM BANK_LOAN_DATA
WHERE MONTH(ISSUE_DATE) = 12;

#15 PMTD AVG. DTI
SELECT AVG(DTI) AS AVG_DTI_PMTD FROM BANK_LOAN_DATA
WHERE MONTH(ISSUE_DATE) = 11;

#16 GOOD LOAN PERCENTAGE
SELECT
(COUNT(CASE WHEN LOAN_STATUS = 'FULLY PAID' OR LOAN_STATUS = 'CURRENT' THEN ID END) * 100.0) /
COUNT(ID) AS GOOD_LOAN_PERCENTAGE
FROM BANK_LOAN_DATA;

#17 GOOD LOAN APPLICATIONS
SELECT COUNT(ID) AS GOOD_LOAN_APPLICATIONS FROM BANK_LOAN_DATA
WHERE LOAN_STATUS = 'FULLY PAID' OR LOAN_STATUS = 'CURRENT';

#18 GOOD LOAN FUNDED AMOUNTS
SELECT SUM(LOAN_AMOUNT) AS GOOD_LOAN_FUNDED_AMOUNT FROM BANK_LOAN_DATA
WHERE LOAN_STATUS = 'FULLY PAID' OR LOAN_STATUS = 'CURRENT';

#19  GOOD LOAN AMOUNT RECIEVED
SELECT SUM(TOTAL_PAYMENT) AS GOOD_LOAN_AMOUNT_RECIEVED FROM BANK_LOAN_DATA
WHERE LOAN_STATUS = 'FULLY PAID' OR LOAN_STATUS = 'CURRENT';

#20 BAD LOAN PERCENTAGE
SELECT
(COUNT(CASE WHEN LOAN_STATUS = 'CHARGED OFF' THEN ID END) * 100.0) /
COUNT(ID) AS BAD_LOAN_PERCENTAGE
FROM BANK_LOAN_DATA;

#21 BAD LOAN APPLICATIONS
SELECT COUNT(ID) AS BAD_LOAN_APPLICATIONS FROM BANK_LOAN_DATA
WHERE LOAN_STATUS = 'CHARGED OFF';

#22 BAD LOAN FUNDED AMOUNTS
SELECT SUM(LOAN_AMOUNT) AS BAD_LOAN_FUNDED_AMOUNT FROM BANK_LOAN_DATA
WHERE LOAN_STATUS = 'CHARGED OFF';

#23 BAD LOAN AMOUNT RECIEVED
SELECT SUM(TOTAL_PAYMENT) AS BAD_LOAN_AMOUNT_RECIEVED FROM BANK_LOAN_DATA
WHERE LOAN_STATUS = 'CHARGED OFF';

#24 LOAN STATUS
SELECT LOAN_STATUS,
COUNT(ID) AS TOTAL,
SUM(TOTAL_PAYMENT) AS TOTAL_AMOUNT_RECIEVED,
SUM(LOAN_AMOUNT) AS TOTAL_FUNDED_AMOUNT,
AVG(INT_RATE) AS INTEREST_RATE,
AVG(DTI) AS DEBT_TO_INCOME_RATIO
FROM BANK_LOAN_DATA
GROUP BY LOAN_STATUS;

#25 TERMS(TENURE)
SELECT TERM ,
COUNT(ID) AS TOTAL_LOAN_APPLICATIONS,
SUM(TOTAL_PAYMENT) AS TOTAL_AMOUNT_RECIEVED,
SUM(LOAN_AMOUNT) AS TOTAL_FUNDED_AMOUNT
FROM BANK_LOAN_DATA
GROUP BY TERM
ORDER BY TERM;

#26 EMPLOYEE LENGTH
SELECT EMP_LENGTH ,
COUNT(ID) AS TOTAL_LOAN_APPLICATIONS,
SUM(TOTAL_PAYMENT) AS TOTAL_AMOUNT_RECIEVED,
SUM(LOAN_AMOUNT) AS TOTAL_FUNDED_AMOUNT
FROM BANK_LOAN_DATA
GROUP BY EMP_LENGTH
ORDER BY EMP_LENGTH;

#27 HOME OWNERSHIP
SELECT HOME_OWNERSHIP,
COUNT(ID) AS TOTAL_LOAN_APPLICATIONS,
SUM(TOTAL_PAYMENT) AS TOTAL_AMOUNT_RECIEVED,
SUM(LOAN_AMOUNT) AS TOTAL_FUNDED_AMOUNT
FROM BANK_LOAN_DATA
GROUP BY HOME_OWNERSHIP
ORDER BY HOME_OWNERSHIP;
